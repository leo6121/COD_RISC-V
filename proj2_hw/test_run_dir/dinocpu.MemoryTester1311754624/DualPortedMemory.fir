;buildInfoPackage: chisel3, version: 3.2.8, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit DualPortedMemory : 
  module DualPortedMemory : 
    input clock : Clock
    input reset : UInt<1>
    output io : {imem : {flip address : UInt<32>, instruction : UInt<32>}, dmem : {flip address : UInt<32>, flip writedata : UInt<32>, flip memread : UInt<1>, flip memwrite : UInt<1>, flip maskmode : UInt<2>, flip sext : UInt<1>, readdata : UInt<32>}}
    
    io.dmem.readdata is invalid @[memory.scala 58:6]
    io.dmem.sext is invalid @[memory.scala 58:6]
    io.dmem.maskmode is invalid @[memory.scala 58:6]
    io.dmem.memwrite is invalid @[memory.scala 58:6]
    io.dmem.memread is invalid @[memory.scala 58:6]
    io.dmem.writedata is invalid @[memory.scala 58:6]
    io.dmem.address is invalid @[memory.scala 58:6]
    io.imem.instruction is invalid @[memory.scala 58:6]
    io.imem.address is invalid @[memory.scala 58:6]
    cmem memory : UInt<32>[512] @[memory.scala 60:19]
    node _T = shr(io.imem.address, 2) @[memory.scala 63:49]
    node _T_1 = bits(_T, 8, 0) @[memory.scala 63:32]
    infer mport _T_2 = memory[_T_1], clock @[memory.scala 63:32]
    io.imem.instruction <= _T_2 @[memory.scala 63:23]
    when io.dmem.memread : @[memory.scala 65:26]
      wire _T_3 : UInt<32> @[memory.scala 66:24]
      node _T_4 = neq(io.dmem.maskmode, UInt<2>("h02")) @[memory.scala 68:28]
      when _T_4 : @[memory.scala 68:37]
        node _T_5 = bits(io.dmem.address, 1, 0) @[memory.scala 69:35]
        node _T_6 = shr(io.dmem.address, 2) @[memory.scala 70:42]
        node _T_7 = bits(_T_6, 8, 0) @[memory.scala 70:25]
        infer mport _T_8 = memory[_T_7], clock @[memory.scala 70:25]
        node _T_9 = mul(_T_5, UInt<4>("h08")) @[memory.scala 70:59]
        node _T_10 = dshr(_T_8, _T_9) @[memory.scala 70:48]
        _T_3 <= _T_10 @[memory.scala 70:16]
        node _T_11 = eq(io.dmem.maskmode, UInt<1>("h00")) @[memory.scala 71:30]
        when _T_11 : @[memory.scala 71:39]
          node _T_12 = shr(io.dmem.address, 2) @[memory.scala 72:44]
          node _T_13 = bits(_T_12, 8, 0) @[memory.scala 72:27]
          infer mport _T_14 = memory[_T_13], clock @[memory.scala 72:27]
          node _T_15 = and(_T_14, UInt<8>("h0ff")) @[memory.scala 72:50]
          _T_3 <= _T_15 @[memory.scala 72:18]
          skip @[memory.scala 71:39]
        else : @[memory.scala 73:20]
          node _T_16 = shr(io.dmem.address, 2) @[memory.scala 74:44]
          node _T_17 = bits(_T_16, 8, 0) @[memory.scala 74:27]
          infer mport _T_18 = memory[_T_17], clock @[memory.scala 74:27]
          node _T_19 = and(_T_18, UInt<16>("h0ffff")) @[memory.scala 74:50]
          _T_3 <= _T_19 @[memory.scala 74:18]
          skip @[memory.scala 73:20]
        skip @[memory.scala 68:37]
      else : @[memory.scala 76:18]
        node _T_20 = shr(io.dmem.address, 2) @[memory.scala 77:42]
        node _T_21 = bits(_T_20, 8, 0) @[memory.scala 77:25]
        infer mport _T_22 = memory[_T_21], clock @[memory.scala 77:25]
        _T_3 <= _T_22 @[memory.scala 77:16]
        skip @[memory.scala 76:18]
      when io.dmem.sext : @[memory.scala 80:25]
        node _T_23 = eq(io.dmem.maskmode, UInt<1>("h00")) @[memory.scala 81:30]
        when _T_23 : @[memory.scala 81:39]
          node _T_24 = bits(_T_3, 7, 7) @[memory.scala 82:50]
          node _T_25 = bits(_T_24, 0, 0) @[Bitwise.scala 72:15]
          node _T_26 = mux(_T_25, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
          node _T_27 = bits(_T_3, 7, 0) @[memory.scala 82:64]
          node _T_28 = cat(_T_26, _T_27) @[Cat.scala 30:58]
          io.dmem.readdata <= _T_28 @[memory.scala 82:26]
          skip @[memory.scala 81:39]
        else : @[memory.scala 83:20]
          node _T_29 = bits(_T_3, 15, 15) @[memory.scala 84:50]
          node _T_30 = bits(_T_29, 0, 0) @[Bitwise.scala 72:15]
          node _T_31 = mux(_T_30, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
          node _T_32 = bits(_T_3, 15, 0) @[memory.scala 84:65]
          node _T_33 = cat(_T_31, _T_32) @[Cat.scala 30:58]
          io.dmem.readdata <= _T_33 @[memory.scala 84:26]
          skip @[memory.scala 83:20]
        skip @[memory.scala 80:25]
      else : @[memory.scala 86:18]
        io.dmem.readdata <= _T_3 @[memory.scala 87:24]
        skip @[memory.scala 86:18]
      skip @[memory.scala 65:26]
    when io.dmem.memwrite : @[memory.scala 91:27]
      node _T_34 = neq(io.dmem.maskmode, UInt<2>("h02")) @[memory.scala 92:28]
      when _T_34 : @[memory.scala 92:37]
        node _T_35 = bits(io.dmem.address, 1, 0) @[memory.scala 93:35]
        wire _T_36 : UInt<32> @[memory.scala 95:26]
        node _T_37 = shr(io.dmem.address, 2) @[memory.scala 96:42]
        node _T_38 = bits(_T_37, 8, 0) @[memory.scala 96:25]
        infer mport _T_39 = memory[_T_38], clock @[memory.scala 96:25]
        _T_36 <= _T_39 @[memory.scala 96:16]
        wire _T_40 : UInt<32> @[memory.scala 98:22]
        node _T_41 = eq(io.dmem.maskmode, UInt<1>("h00")) @[memory.scala 99:30]
        when _T_41 : @[memory.scala 99:39]
          node _T_42 = mul(_T_35, UInt<4>("h08")) @[memory.scala 100:48]
          node _T_43 = dshl(UInt<8>("h0ff"), _T_42) @[memory.scala 100:37]
          node _T_44 = not(_T_43) @[memory.scala 100:28]
          node _T_45 = and(_T_36, _T_44) @[memory.scala 100:26]
          _T_40 <= _T_45 @[memory.scala 100:14]
          skip @[memory.scala 99:39]
        else : @[memory.scala 101:20]
          node _T_46 = mul(_T_35, UInt<4>("h08")) @[memory.scala 102:50]
          node _T_47 = dshl(UInt<16>("h0ffff"), _T_46) @[memory.scala 102:39]
          node _T_48 = not(_T_47) @[memory.scala 102:28]
          node _T_49 = and(_T_36, _T_48) @[memory.scala 102:26]
          _T_40 <= _T_49 @[memory.scala 102:14]
          skip @[memory.scala 101:20]
        node _T_50 = shr(io.dmem.address, 2) @[memory.scala 104:30]
        node _T_51 = bits(_T_50, 8, 0) @[memory.scala 104:13]
        infer mport _T_52 = memory[_T_51], clock @[memory.scala 104:13]
        node _T_53 = mul(_T_35, UInt<4>("h08")) @[memory.scala 104:76]
        node _T_54 = dshl(io.dmem.writedata, _T_53) @[memory.scala 104:65]
        node _T_55 = or(_T_40, _T_54) @[memory.scala 104:44]
        _T_52 <= _T_55 @[memory.scala 104:36]
        skip @[memory.scala 92:37]
      else : @[memory.scala 105:18]
        node _T_56 = shr(io.dmem.address, 2) @[memory.scala 106:30]
        node _T_57 = bits(_T_56, 8, 0) @[memory.scala 106:13]
        infer mport _T_58 = memory[_T_57], clock @[memory.scala 106:13]
        _T_58 <= io.dmem.writedata @[memory.scala 106:36]
        skip @[memory.scala 105:18]
      skip @[memory.scala 91:27]
    
